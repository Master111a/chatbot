services:
  # nginx:
  #   build: ./nginx
  #   container_name: newwave-nginx
  #   restart: always
  #   ports:
  #     - "${NGINX_EXPORT_PORT:-80}:80"
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - newwave-network

  # # Frontend service
  # frontend:
  #   build: ./frontend
  #   container_name: newwave-frontend
  #   restart: always
  #   ports:
  #     - "${FE_EXPORT_PORT:-3000}:3000"
  #   environment:
  #     - ENV=${ENV:-dev}
  #     - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://${MILVUS_EXPORT_IP:-localhost}:17002}
  #     - PORT=3000
  #   volumes:
  #     - ./frontend:/app
  #     - ./logs/frontend:/app/logs
  #     - /app/node_modules
  #     - /app/.next
  #   networks:
  #     - newwave-network

  # Backend service
  backend:
    build: ./backend
    container_name: newwave-backend
    restart: always
    ports:
      - "${BE_EXPORT_PORT:-17002}:8000"
    environment:
      - ENV=${ENV:-prod}
      # Worker Configuration for Production
      - WORKERS=${WORKERS:-4}
      - WORKER_CLASS=${WORKER_CLASS:-uvicorn.workers.UvicornWorker}
      - WORKER_CONNECTIONS=${WORKER_CONNECTIONS:-1000}
      - MAX_REQUESTS=${MAX_REQUESTS:-1000}
      - MAX_REQUESTS_JITTER=${MAX_REQUESTS_JITTER:-100}
      - KEEPALIVE=${KEEPALIVE:-2}
      # Database and services
      - DATABASE_URL=postgresql://${PG_USER:-postgres}:${PG_PASSWORD:-postgres}@${PG_HOST:-db-postgres}:${PG_PORT:-5432}/${PG_DB:-newwave_chatbot}
      - MILVUS_HOST=${MILVUS_HOST:-db-milvus}
      - MILVUS_PORT=${MILVUS_PORT:-19530}
      - MILVUS_USER=${MILVUS_USER:-}
      - MILVUS_PASSWORD=${MILVUS_PASSWORD:-milvus}
      - MILVUS_DB=${MILVUS_DB:-newwave_chatbot}
      - MILVUS_COLLECTION=${MILVUS_COLLECTION:-chatbot}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_EXTERNAL_ENDPOINT=${MINIO_EXTERNAL_ENDPOINT:-http://${MILVUS_EXPORT_IP:-localhost}:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_SECURE=${MINIO_SECURE:-false}
      - MINIO_EXTERNAL_SECURE=${MINIO_EXTERNAL_SECURE:-false}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-newwave-documents}
      - OLLAMA_BASE_URL=${OLLAMA_API_URL:-http://ollama:11434}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      # GitLab OAuth Configuration
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID:-}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET:-}
      - GITLAB_REDIRECT_URI=${GITLAB_REDIRECT_URI:-http://${MILVUS_EXPORT_IP:-localhost}:8000/auth/gitlab/callback}
      - GITLAB_BASE_URL=${GITLAB_BASE_URL:-https://gitlab.com}
      # Optimized Model Configuration
      - REFLECTION_MODEL=qwen3:1.7b
      - SEMANTIC_ROUTER_MODEL=qwen3:1.7b
      - RESPONSE_GENERATION_MODEL=qwen3:8b
      - FUNCTION_CALLING_MODEL=qwen3:8b
      - DEFAULT_CHAT_MODEL=qwen3:8b
      # Performance optimization
      - TRANSFORMERS_CACHE=/app/model_cache
      - HF_HOME=/app/model_cache
      # Production optimizations
      - DEFAULT_MAX_TOKENS=${DEFAULT_MAX_TOKENS:-4096}
      - DEFAULT_RAG_MAX_TOKENS=${DEFAULT_RAG_MAX_TOKENS:-4096}
      - GEMINI_DEFAULT_MAX_TOKENS=${GEMINI_DEFAULT_MAX_TOKENS:-4096}
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
      - model-cache:/app/model_cache
    depends_on:
      - postgres
      - milvus
      # - ollama
    networks:
      - newwave-network
    deploy:
      resources:
        limits:
          cpus: '4.0'     
          memory: 8G      
        reservations:
          cpus: '2.0'     
          memory: 4G      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL service
  postgres:
    image: postgres:15-alpine
    container_name: ${PG_HOST:-db-postgres}
    restart: always
    environment:
      - POSTGRES_USER=${PG_USER:-postgres}
      - POSTGRES_PASSWORD=${PG_PASSWORD:-postgres}
      - POSTGRES_DB=${PG_DB:-newwave_chatbot}
    ports:
      - "${DB_EXPORT_PORT:-17000}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/db-init.sh:/docker-entrypoint-initdb.d/db-init.sh
    networks:
      - newwave-network
    
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  # Etcd service
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: newwave-etcd
    restart: always
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=8589934592
      - ETCD_SNAPSHOT_COUNT=100000
      - ETCD_HEARTBEAT_INTERVAL=100
      - ETCD_ELECTION_TIMEOUT=1000
      - ETCD_MAX_REQUEST_BYTES=33554432
    volumes:
      - etcd-data:/etcd
    command:
      - etcd
      - --advertise-client-urls=http://${MILVUS_EXPORT_IP:-127.0.0.1}:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --data-dir=/etcd
      - --name=s1
      - --initial-advertise-peer-urls=http://${MILVUS_EXPORT_IP:-127.0.0.1}:2380
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=s1=http://${MILVUS_EXPORT_IP:-127.0.0.1}:2380
      - --initial-cluster-token=tkn
      - --initial-cluster-state=new
      - --max-txn-ops=1024
      - --max-request-bytes=33554432
      - --grpc-keepalive-min-time=5s
      - --grpc-keepalive-interval=2h
      - --grpc-keepalive-timeout=20s
    ports:
      - "${ETCD_CLIENT_PORT:-2379}:2379"
      - "${ETCD_PEER_PORT:-2380}:2380"
    networks:
      - newwave-network
    
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  # MinIO service
  minio:
    image: minio/minio:latest
    container_name: newwave-minio
    restart: always
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_EXTERNAL_ENDPOINT:-http://${MILVUS_EXPORT_IP:-localhost}:9000}
      - MINIO_API_REQUESTS_MAX=10000
      - MINIO_API_REQUESTS_DEADLINE=10s
    volumes:
      - minio-data:/data
    ports:
      - "${MINIO_PORT:-9000}:9000"                
      - "${MINIO_CONSOLE_PORT:-9001}:9001" 
    command: server --console-address ":9001" /data
    networks:
      - newwave-network
    
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  # MinIO initializer
  minio-init:
    build:
      context: ./minio
      dockerfile: Dockerfile
    container_name: newwave-minio-init
    environment:
      - MINIO_HOST=${MINIO_HOST:-minio}
      - MINIO_PORT=${MINIO_PORT:-9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - newwave-network
    restart: on-failure

  # Milvus service
  milvus:
    image: milvusdb/milvus:v2.4.8
    container_name: ${MILVUS_HOST:-db-milvus}
    restart: always
    command: ["milvus", "run", "standalone"]
    environment:
      # Dependencies
      - ETCD_ENDPOINTS=${ETCD_ENDPOINTS:-etcd:2379}
      - MINIO_ADDRESS=${MINIO_ADDRESS:-minio}
      - MINIO_PORT=${MINIO_PORT:-9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_USE_SSL=${MINIO_USE_SSL:-false}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-newwave-documents}
      
      # Milvus specific
      - MILVUS_EXPORT_IP=${MILVUS_EXPORT_IP:-localhost}
      - MILVUS_PASSWORD=${MILVUS_PASSWORD:-milvus}
      - MILVUS_USER=${MILVUS_USER:-}
      - MILVUS_AUTH_ENABLED=${MILVUS_AUTH_ENABLED:-false}
      - MILVUS_TLS_MODE=${MILVUS_TLS_MODE:-0}
      
      # Port configuration
      - MILVUS_PROXY_PORT=${MILVUS_PROXY_PORT:-19530}
      - MILVUS_PROXY_INTERNAL_PORT=${MILVUS_PROXY_INTERNAL_PORT:-19529}
      - MILVUS_WEB_PORT=${MILVUS_WEB_PORT:-9091}
      - MILVUS_QUERY_COORD_PORT=${MILVUS_QUERY_COORD_PORT:-19531}
      - MILVUS_DATA_COORD_PORT=${MILVUS_DATA_COORD_PORT:-13333}
      - MILVUS_INDEX_COORD_PORT=${MILVUS_INDEX_COORD_PORT:-31000}
      - MILVUS_ROOT_COORD_PORT=${MILVUS_ROOT_COORD_PORT:-53100}
      - MILVUS_DATA_NODE_PORT=${MILVUS_DATA_NODE_PORT:-21124}
      - MILVUS_INDEX_NODE_PORT=${MILVUS_INDEX_NODE_PORT:-21121}
      - MILVUS_METRICS_PORT=${MILVUS_METRICS_PORT:-9091}
      
      - MILVUS_ENABLE_HYBRID_SEARCH=true
      - MILVUS_ENABLE_FULL_TEXT_SEARCH=true
      - MILVUS_ENABLE_SPARSE_FLOAT_VECTOR=true
      - MILVUS_AUTO_INDEX=true
      
      - GOMAXPROCS=${GOMAXPROCS:-8}
      - GOMEMLIMIT=${GOMEMLIMIT:-6GiB}
      
    volumes:
      - milvus-data:/var/lib/milvus
      - ./milvus/milvus.yaml:/milvus/configs/milvus.yaml
      - ./logs/milvus:/var/lib/milvus/logs
      
    ports:
      - "${MILVUS_PORT:-19530}:19530"
      - "${MILVUS_WEB_PORT:-9091}:9091"
      
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
      
    networks:
      - newwave-network
      
    deploy:
      resources:
        limits:
          cpus: '6.0'        
          memory: 10G        
        reservations:
          cpus: '3.0'        
          memory: 6G         
          
    sysctls:
      - net.core.somaxconn=65535
      - net.core.rmem_max=134217728
      - net.core.wmem_max=134217728
      - net.ipv4.tcp_rmem=4096 87380 134217728
      - net.ipv4.tcp_wmem=4096 65536 134217728
      - net.ipv4.tcp_congestion_control=bbr
      
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 1048576
        hard: 1048576
      nproc:
        soft: 1048576
        hard: 1048576
        
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s  # Tăng start period cho RAM 16GB
      
    # Tránh port conflict và memory issues
    security_opt:
      - seccomp:unconfined
    shm_size: 2g  # Tăng shared memory cho RAM 16GB

  # Ollama service - Optimized for performance
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: newwave-ollama
  #   restart: always
  #   ports:
  #     - "11434:11434"
  #   environment:
  #     - OLLAMA_KEEP_ALIVE=-1           
  #     - OLLAMA_MAX_LOADED_MODELS=4
  #     - OLLAMA_NUM_PARALLEL=4
  #     - OLLAMA_FLASH_ATTENTION=1
  #     
  #     - OLLAMA_HOST=0.0.0.0
  #     - OLLAMA_ORIGINS=*
  #   volumes:
  #     - ollama-data:/root/.ollama
  #     - ./ollama/init-models.sh:/init-models.sh
  #   entrypoint: ["/bin/sh", "-c", "chmod +x /init-models.sh && ollama serve & sleep 10 && /init-models.sh & wait"]
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4.0'
  #         memory: 8G     # Giảm xuống cho RAM 16GB
  #       reservations:
  #         cpus: '2.0'
  #         memory: 4G     # Giảm xuống cho RAM 16GB
  #   networks:
  #     - newwave-network

volumes:
  postgres-data:
    driver: local
  milvus-data:
    driver: local
  etcd-data:
    driver: local
  minio-data:
    driver: local
  model-cache:
    driver: local
  # ollama-data:
  #   driver: local

networks:
  newwave-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16